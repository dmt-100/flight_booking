plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'maven-publish'
    id 'checkstyle'
    id 'pmd'
}

compileJava {
    sourceCompatibility = '17'
    targetCompatibility = '17'
    options.compilerArgs << '--enable-preview'
}


java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.postgresql:postgresql:42.7.3'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mockito:mockito-core:4.2.0'
    testImplementation 'org.assertj:assertj-core:3.21.0'
}

tasks.named('test') {
    useJUnitPlatform()
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}

checkstyle {
    toolVersion = '8.36.1'
    configFile = file('config/checkstyle/checkstyle.xml')
}

pmd {
    toolVersion = '6.23.0'
    ruleSets = ['category/java/bestpractices.xml', 'category/java/design.xml']
}

bootRun {
    jvmArgs = ['-Dspring.profiles.active=development']
}
